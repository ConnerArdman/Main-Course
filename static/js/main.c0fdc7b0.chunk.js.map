{"version":3,"sources":["components/Slider.js","components/SliderGroup.js","components/CheckBoxGroup.js","components/Filters.js","components/NutritionLabel.js","components/Recipe.js","components/ShoppingList.js","components/Recipes.js","components/About.js","App.js","index.js"],"names":["Slider","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","collapsed","inherits","createClass","key","value","_this$props","name","id","min","max","defaultValue","aria","inputChange","rotated","react_default","a","createElement","className","onClick","collapse","bind","htmlFor","pluralize","aria-label","removeDash","type","onChange","setState","prevState","replace","_this$props2","unit","shouldPlural","Component","SliderGroup","masterUnits","sliderPropsArray","masterValue","title","map","sliderProps","index","Slider_Slider","CheckBoxGroup","checkBoxes","change","checkBox","lower","toLowerCase","Filters","meals","cookTime","carbs","protein","fat","restrictions","Set","_this$state","SliderGroup_SliderGroup","calcCalories","CheckBoxGroup_CheckBoxGroup","addRestriction","Button","bsStyle","bsSize","generateRecipes","_this$state2","fetchQueries","numMeals","calories","maxCookTime","Array","from","event","_event$target","target","defineProperty","has","delete","add","_this$state3","MACROS","get","NutritionLabel","apply","arguments","hidden","_this$props$hit$recip","hit","recipe","totalNutrients","servings","yield","Math","round","PROCNT","quantity","CHOCDF","FAT","data","datasets","backgroundColor","labels","es","options","responsive","maintainAspectRatio","Recipe","loaded","_this2","setTimeout","_hit$recipe","label","image","ingredientLines","url","source","loadEffect","Panel","defaultExpanded","Heading","Title","toggle","role","del","Collapse","Body","Grid","fluid","Row","Col","xs","md","src","alt","NutritionLabel_NutritionLabel","Footer","href","rel","ingredient","_this3","deleteRecipe","ShoppingList","hits","ingredients","forEach","toConsumableArray","concat","Recipes","loading","length","react_loading_default","color","height","width","class","ShoppingList_ShoppingList","Recipe_Recipe","About","Map","DEFAULT_TOLERANCE_RANGE","getRange","rangeOffset","undefined","parseInt","diff","checkStatus","response","status","json","Promise","reject","Error","statusText","App","extraRecipes","about","react","Navbar","inverse","collapseOnSelect","fixedTop","Header","Brand","returnHome","Toggle","Nav","NavItem","eventKey","gotoAbout","About_About","Filters_Filters","Recipes_Recipes","toggleAbout","filters","fetch","getAPIQuery","then","recipes","parseRecipes","output","arr","i","j","floor","random","temp","shuffleArray","filter","healthLabels","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","restriction","includes","err","return","showRecipes","slice","pop","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.c0fdc7b0.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nexport class Slider extends Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         collapsed: false\n      };\n   }\n\n   render() {\n      const {name, id, min, max, defaultValue, aria, inputChange, value} = this.props;\n      const {collapsed} = this.state;\n      const rotated = collapsed ? \" rotated\" : \"\";\n\n      return (\n         <div>\n            {name ?\n               <h3\n                  className={\"chevron\" + rotated}\n                  onClick={this.collapse.bind(this)}>\n                  {name}\n               </h3>\n               : null\n            }\n            {!collapsed ?\n               <div>\n                  <label htmlFor={id}>\n                     {value}{this.pluralize(value)}\n                  </label>\n                  <input\n                     aria-label={aria != null ? aria : this.removeDash(id)}\n                     type=\"range\"\n                     min={min}\n                     max={max}\n                     defaultValue={defaultValue}\n                     className=\"slider\"\n                     id={id}\n                     onChange={inputChange}\n                     />\n               </div>\n               : null}\n            </div>\n      );\n   }\n\n   collapse() {\n      this.setState(prevState => {\n         return {\n            collapsed: !prevState.collapsed\n         };\n      });\n   }\n\n   removeDash(id) {\n      return id.replace(/-/g, ' ');\n   }\n\n   pluralize(value) {\n      const {unit, shouldPlural} = this.props;\n      return value > 1 && shouldPlural ? unit + 's' : unit;\n   }\n}\n","import React, { Component } from 'react';\nimport { Slider } from './Slider';\n\nexport class SliderGroup extends Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         collapsed: false\n      };\n   }\n\n   render() {\n      const {masterUnits, sliderPropsArray, masterValue, title} = this.props;\n      const {collapsed} = this.state;\n      const rotated = collapsed ? \" rotated\" : \"\";\n      return (\n         <div>\n            <h3\n               className={\"chevron\" + rotated}\n               onClick={this.collapse.bind(this)}>\n               {title}\n            </h3>\n            <div className={collapsed ? \"hidden\" : null}>\n               <label>\n                  ({masterValue} {masterUnits})\n               </label>\n               {sliderPropsArray.map((sliderProps, index) => {\n                  const {id, unit, min, max, defaultValue, aria, value, inputChange} = sliderProps;\n                  return (\n                     <Slider\n                        key={index}\n                        id={id}\n                        unit={unit}\n                        min={min}\n                        max={max}\n                        defaultValue={defaultValue}\n                        aria={aria}\n                        value={value}\n                        inputChange={inputChange}\n                        />\n                  );\n               })}\n            </div>\n         </div>\n      );\n   }\n\n   collapse() {\n      this.setState(prevState => {\n         return {\n            collapsed: !prevState.collapsed\n         };\n      });\n   }\n}\n","import React, { Component } from 'react';\n\nexport class CheckBoxGroup extends Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         collapsed: true\n      };\n   }\n\n   render() {\n      const {title, checkBoxes, change} = this.props;\n      const {collapsed} = this.state;\n      const rotated = collapsed ? \" rotated\" : \"\";\n      return (\n         <div>\n            <h3\n               className={\"chevron\" + rotated}\n               onClick={this.collapse.bind(this)}>\n               {title}\n            </h3>\n            <div className={collapsed ? \"hidden\" : null}>\n               {checkBoxes.map((checkBox, index) => {\n                  const lower = checkBox.toLowerCase();\n                  return (\n                     <div className=\"check-group\" key={index}>\n                        <input\n                           type=\"checkbox\"\n                           id={lower}\n                           defaultValue={lower}\n                           onChange={change} />\n                        <label htmlFor={lower}>\n                           {checkBox}\n                        </label>\n                     </div>\n                  );\n               })}\n            </div>\n         </div>\n      );\n   }\n\n   collapse() {\n      this.setState(prevState => {\n         return {\n            collapsed: !prevState.collapsed\n         };\n      });\n   }\n}\n","import React, { Component } from 'react';\nimport { Slider } from './Slider';\nimport { SliderGroup } from './SliderGroup';\nimport { CheckBoxGroup } from './CheckBoxGroup';\nimport { MACROS } from '../App';\n\nimport { Button } from 'react-bootstrap';\n\nexport class Filters extends Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         meals: 3,\n         cookTime: 15,\n         carbs: 206,\n         protein: 146,\n         fat: 67,\n         restrictions: new Set()\n      };\n   }\n\n   render() {\n      const {meals, cookTime, carbs, protein, fat} = this.state;\n      return (\n         <section id=\"filters\">\n            <h1>Custom Filters</h1>\n\n            <Slider\n                  className=\"control-option\"\n                  name=\"Meals Per Day\"\n                  id=\"meals\"\n                  unit=\" Meal\"\n                  min=\"1\"\n                  max=\"7\"\n                  defaultValue=\"3\"\n                  inputChange={this.inputChange.bind(this)}\n                  value={meals}\n                  shouldPlural={true}\n                  />\n\n            <Slider\n                  className=\"control-option\"\n                  name=\"Max Cook Time Per Meal\"\n                  id=\"cookTime\"\n                  unit=\" Minute\"\n                  min=\"5\"\n                  max=\"120\"\n                  defaultValue=\"15\"\n                  inputChange={this.inputChange.bind(this)}\n                  value={cookTime}\n                  shouldPlural={true}\n                  />\n            \n            <SliderGroup\n                  className=\"control-option\"\n                  masterUnits=\"Calories\"\n                  masterValue={this.calcCalories()}\n                  title=\"Daily Macronutrients\"\n                  sliderPropsArray={[\n                     {\n                        aria: \"Carbohydrates Per Meal\",\n                        id: \"carbs\",\n                        unit: \"g carbs\",\n                        min: \"25\",\n                        max: \"400\",\n                        defaultValue: \"206\",\n                        value: carbs,\n                        inputChange: this.inputChange.bind(this)\n                     },\n                     {\n                        aria: \"Protein Per Meal\",\n                        id: \"protein\",\n                        unit: \"g protein\",\n                        min: \"25\",\n                        max: \"400\",\n                        defaultValue: \"146\",\n                        value: protein,\n                        inputChange: this.inputChange.bind(this)\n                     },\n                     {\n                        aria: \"Fat Per Meal\",\n                        id: \"fat\",\n                        unit: \"g fat\",\n                        min: \"5\",\n                        max: \"200\",\n                        defaultValue: \"67\",\n                        value: fat,\n                        inputChange: this.inputChange.bind(this)\n                     }\n                  ]}\n               />\n            \n            <CheckBoxGroup\n                  className=\"control-option\"\n                  checkBoxes={['vegan', 'vegetarian']}\n                  title=\"Dietary Restrictions\"\n                  change={this.addRestriction.bind(this)}\n                  />\n            \n            <Button\n                  bsStyle=\"primary\"\n                  bsSize=\"large\"\n                  type=\"button\"\n                  onClick={this.generateRecipes.bind(this)}>\n                  Generate Recipes\n            </Button>\n         </section>\n      );\n   }\n\n   generateRecipes() {\n      const {meals, cookTime, carbs, protein, fat, restrictions} = this.state;\n      const {fetchQueries} = this.props;\n      const filters = {\n         numMeals: meals,\n         calories: this.calcCalories(),\n         maxCookTime: cookTime,\n         carbs: carbs,\n         protein: protein,\n         fat: fat,\n         restrictions: Array.from(restrictions)\n      };\n      fetchQueries(filters)\n   }\n\n   inputChange(event) {\n      const {id, value} = event.target;\n      this.setState({\n         [id]: value\n      });\n   }\n\n   addRestriction(event) {\n      const {value} = event.target;\n      this.setState(prevState => {\n         const {restrictions} = prevState;\n         if (restrictions.has(value)) {\n            restrictions.delete(value);\n         } else {\n            restrictions.add(value);\n         }\n         return {restrictions};\n      });\n   }\n\n   calcCalories() {\n      const {fat, carbs, protein} = this.state;\n      return (fat * MACROS.get('fat')) +\n         (protein * MACROS.get('protein')) +\n         (carbs * MACROS.get('carbs'));\n   }\n}\n","import React, { Component } from 'react';\nimport { MACROS } from '../App';\nimport { Pie } from 'react-chartjs-2';\n\nexport class NutritionLabel extends Component {\n   render() {\n      const {hidden} = this.props;\n      const {totalNutrients, calories} = this.props.hit.recipe;\n      const servings = this.props.hit.recipe.yield;\n      const protein = Math.round(totalNutrients.PROCNT.quantity);\n      const carbs = Math.round(totalNutrients.CHOCDF.quantity);\n      const fat = Math.round(totalNutrients.FAT.quantity);\n      const data = {\n         datasets: [\n            {\n               data: [\n                  protein * MACROS.get('protein'),\n                  carbs * MACROS.get('carbs'),\n                  fat * MACROS.get('fat')\n               ],\n               backgroundColor: ['red', 'green', 'blue']\n            }\n         ],\n         labels: ['Protein Cals', 'Carbs Cals', 'Fat Cals']\n      };\n      const options = {\n         responsive: true,\n         maintainAspectRatio: false\n      };\n\n      return (\n         <div className={hidden ? \"hidden\" : \"\"}>\n            <div className=\"chart\">\n               <Pie data={data} options={options} />\n               <ul>\n                  <li><strong>Servings:</strong>&nbsp;{servings}</li>\n                  <li><strong>Calories:</strong>&nbsp;{Math.round(calories)}</li>\n                  <li><strong>Protein:</strong>&nbsp;{protein + \"g\"}</li>\n                  <li><strong>carbs:</strong>&nbsp;{carbs + \"g\"}</li>\n                  <li><strong>fat:</strong>&nbsp;{fat + \"g\"}</li>\n               </ul>\n            </div>\n         </div>\n      );\n   }\n}\n","import React, { Component } from 'react';\nimport { NutritionLabel } from './NutritionLabel';\nimport {Panel, Grid, Row, Col} from 'react-bootstrap';\n\nconst TRANSITION_TIME = 1000; // in ms\n\nexport class Recipe extends Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         collapsed: false,\n         loaded: false\n      };\n   }\n\n   componentDidMount() {\n      setTimeout(() => {\n         this.setState({loaded: true});\n      }, 0);\n   }\n\n   render() {\n      const {hit} = this.props;\n      const {label, image, ingredientLines, url, source} = hit.recipe;\n      const {collapsed, loaded} = this.state;\n      const loadEffect = loaded ? \" loaded\" : \"\";\n\n      return (\n        <Panel id=\"collapsible-panel-example-2\" defaultExpanded={false} className={\"recipe\" + loadEffect}>\n            <Panel.Heading>\n                <Panel.Title toggle>\n                    {label}\n                </Panel.Title>\n                <div\n                  role=\"button\"\n                  className=\"del\"\n                  onClick={this.del.bind(this)}>X</div>\n            </Panel.Heading>\n            <Panel.Collapse>\n                <Panel.Body>\n                    <Grid fluid={true}>\n                        <Row className=\"show-grid\" id=\"grid\">\n                            <Col xs={12} md={6}>\n                                <img src={image} alt={label} className={collapsed ? \"hidden\" : null} />\n                            </Col>\n                            <Col xs={12} md={6}>\n                                <div className = \"pieContainer\">\n                                    <NutritionLabel hit={hit} hidden={collapsed ? true : false} />\n                                </div>\n                            </Col>\n                        </Row>\n                    </Grid>\n                </Panel.Body>\n                <Panel.Footer>\n                    <h1 className={collapsed ? \"hidden\" : null}>\n                        <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">{\"Full Recipe From \" + source}</a>\n                    </h1>\n\n                    <ul className={collapsed ? \"hidden\" : null}>\n                        {ingredientLines.map((ingredient, index) => {\n                            return <li key={index}>{ingredient}</li>\n                        })}\n                    </ul>\n                </Panel.Footer>\n            </Panel.Collapse>\n        </Panel>\n      );\n   }\n\n   del() {\n      // Fade out and back in\n      this.setState({loaded: false});\n      setTimeout(() => {\n         this.props.deleteRecipe();\n         this.setState({loaded: true});\n      }, TRANSITION_TIME);\n   }\n\n   collapse() {\n      this.setState(prevState => {\n         return {\n            collapsed: !prevState.collapsed\n         };\n      });\n   }\n\n}\n","import React, { Component } from 'react';\nimport {Panel} from 'react-bootstrap';\n\nexport class ShoppingList extends Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         collapsed: false,\n         loaded: false\n      };\n   }\n\n   componentDidMount() {\n      setTimeout(() => {\n         this.setState({loaded: true});\n      }, 0);\n   }\n\n   render() {\n      const {hits} = this.props;\n      let ingredients = [];\n      hits.forEach(hit => {\n         ingredients = [...ingredients, ...hit.recipe.ingredientLines];\n      });\n\n      const {collapsed, loaded} = this.state;\n      const loadEffect = loaded ? \" loaded\" : \"\";\n      return (\n        <Panel id=\"collapsible-panel-example-2\" defaultExpanded={false} className={\"recipe\" + loadEffect}>\n            <Panel.Heading>\n                <Panel.Title toggle>\n                    Shopping List\n                </Panel.Title>\n            </Panel.Heading>\n            <Panel.Collapse>\n                <Panel.Body>\n                    <ul className={collapsed ? \"hidden\" : null}>\n                        {ingredients.map((ingredient, index) => {\n                            return <li key={index}>{ingredient}</li>\n                        })}\n                    </ul>\n                </Panel.Body>\n            </Panel.Collapse>\n        </Panel>\n      );\n   }\n\n   collapse() {\n      this.setState(prevState => {\n         return {\n            collapsed: !prevState.collapsed\n         };\n      });\n   }\n\n}\n","import React, { Component } from 'react';\nimport { Recipe } from './Recipe';\nimport { ShoppingList } from './ShoppingList';\nimport ReactLoading from 'react-loading';\n\nexport class Recipes extends Component {\n   render() {\n      const {hits, deleteRecipe, loading} = this.props;\n      const loaded = hits.length !== 0\n      \n      return (\n         <section id=\"recipes\">\n            <h1>Your Custom Meal Plan</h1>\n\n            <div id=\"plan-container\" className={!loaded ? \"hidden\" : null}>\n                  {loading ?\n                        <div>\n                              <ReactLoading id=\"loading\" type={\"spin\"} color={\"Black\"} height={150} width={150}/>\n                              <div class=\"push\"></div><div class=\"push\"></div>\n                        </div>\n                        :\n                        <div>\n                        <ShoppingList hits={hits} />\n                        {hits.map((hit, index) => {\n                              return <Recipe\n                              hit={hit}\n                              key={index}\n                              deleteRecipe={() => deleteRecipe(index)} />\n                        })}\n                        </div>\n                        }\n            </div>\n                        \n            <p id=\"plan-placeholder\" className={loaded ? \"hidden\" : null}>\n                  {loading ?\n                        <ReactLoading id=\"loading\" type={\"spin\"} color={\"Black\"} height={150} width={150} /> :\n                        <p>Meal plan will appear here once it is created!</p>}\n                  <div class=\"push\"></div><div class=\"push\"></div>\n            </p>\n         </section>\n      );\n   }\n}\n","import React, { Component } from 'react';\n\nexport class About extends Component {\n   render() {\n      return (\n        <div className=\"col\" id=\"about-page\">\n            <div>\n                <h1>About Cook Healthy</h1>\n                <p>\n                    The original idea here was to create an application that would somehow make the\n                    lives of students easier. As a student myself, I found that I was constantly\n                    eating out, because I was running out of ideas of what to make. As a result, I\n                    was spending more money than I wanted to on food. To solve this problem, I\n                    created Cook Healhty, an application to help create a\n                    <strong> cheap daily meal plan</strong>. The idea is pretty simple, you can add\n                    filters based on nutritional goals, and Cook Healthy will\n                    automatically create a customized plan with recipes and a weekly shopping cart\n                    to bring to the grocery story.\n                </p>\n            </div>\n\n            <div>\n                <h2>Some Limitations</h2>\n                <p>\n                    The orginal goal here was to allow a budget to be part of the filters,\n                    and to provide an entire weeks worth of recipes. Additionally, the original\n                    wireframe contained a few more filters. Unfortunately, limitations of the API\n                    are preventing this currently. There is a great deal of rate limiting happening\n                    from the API, preventing the site from gathering all of the information it needs.\n                    Additionally, I wanted to show the actual recipe on the screen, but this is another\n                    limitation of the free version of this API.\n                </p>\n            </div>\n\n            <div>\n                <h2>About The Development</h2>\n                <p>\n                For this site, I chose to utlize the Less CSS extension, as it allowed\n                me to create simple variables that control the look and feel of the\n                site. Changing any of the variables at the top of the Less file should\n                substantially change the look of the site. Additionally, I built this\n                initial version with a mobile first approach, meaning all of the default\n                styles are for smaller devices. That said, the CSS should scale nicely\n                on a larger screen in a multi-column format.\n                </p>\n                <p>\n                In addition to the CSS, I wrote some basic JavaScript functions to add\n                to the aesthetic and usability of the page. These functions are listening\n                for the screen size to change, in order to change the logic for expanding\n                and compressing the filters section. Additionally, this JavaScript serves to\n                keep track of the changes made on the sliders and display them to the user.\n                As a note, Chrome's mobile simulator blocks these sliders, but they work\n                perfectly on\n                <a href=\"https://caniuse.com/#search=range\" target=\"_blank\" rel=\"noopener noreferrer\">most mobile devices.</a>\n                </p>\n            </div>\n        </div>\n      );\n   }\n}\n","import React, { Component, Fragment } from 'react';\nimport './App.css';\nimport { Filters } from './components/Filters';\nimport { Recipes } from './components/Recipes';\nimport { About } from './components/About';\nimport 'whatwg-fetch';\n\nimport { Navbar, Nav, NavItem} from 'react-bootstrap';\n\n// Maping of macronutrients to calories per gram\nexport const MACROS = new Map([\n   ['carbs', 4],\n   ['fat', 9],\n   ['protein', 4]\n]);\n\n/**\n* The API has a lot of filtering limitations, so this is how many\n* queries to make so we can do custom filtering on the client side.\n*/\nconst NUM_RECIPES = 100;\n\n// Default amount of tolerance on entred mactronutrients.\nconst DEFAULT_TOLERANCE_RANGE = .2;\n\n// Storing API keys here for the purposes of this class.\n// TODO: add a server as a layer of abstraction between API keys and clients\nconst API = 'https://api.edamam.com/search?app_id=4fba7f21&app_key=015209fd4e63d9db67f22a621a26ea4a';\n\nclass App extends Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         extraRecipes: [],\n         loading: false,\n         about: false, // Is on about screen\n         hits: [] // A hit is the term for a recipe in the API\n      };\n   }\n\n   render() {\n      const {hits, loading, about} = this.state;\n      return (\n         <Fragment>\n\n            <Navbar inverse collapseOnSelect fixedTop fluid>\n                  <Navbar.Header>\n                        <Navbar.Brand>\n                              <a href=\"#\" onClick={this.returnHome.bind(this)}>\n                                    Cook Healthy\n                              </a>\n                        </Navbar.Brand>\n                        <Navbar.Toggle/>\n                  </Navbar.Header>\n                  <Navbar.Collapse>\n                        <Nav>\n                              <NavItem eventKey={1} href=\"#\" onClick={this.returnHome.bind(this)}>\n                                    {about ? \"Home\" : <strong>Home</strong>}\n                              </NavItem>\n                        </Nav>\n                        <Nav>\n                              <NavItem eventKey={1} href=\"#\" onClick={this.gotoAbout.bind(this)}>\n                                    {about ? <strong>About</strong> : \"About\"}\n                              </NavItem>\n                        </Nav>\n                  </Navbar.Collapse>\n            </Navbar>\n\n            <div className=\"push\"></div>\n\n            {about ?\n                  (<div className=\"col-container\" id=\"appContainer\">\n                        <About/>\n                  </div>)\n                  :\n                  (<div className=\"col-container\" id=\"appContainer\">\n                        <div className=\"col col1\" id=\"filterContainer\">\n                              <Filters fetchQueries={this.fetchQueries.bind(this)}/>\n                        </div>\n\n                        {loading ?\n                              (<div className=\"col col2 loading\" id=\"recipeContainer\">\n                              <Recipes\n                                    hits={hits}\n                                    deleteRecipe={this.deleteRecipe.bind(this)}\n                                    loading={loading} />\n                              </div>)\n                              :\n                              (<div className=\"col col2\" id=\"recipeContainer\">\n                              <Recipes\n                                    hits={hits}\n                                    deleteRecipe={this.deleteRecipe.bind(this)}\n                                    loading={loading} />\n                              </div>)\n                        }\n                  </div>)\n            }\n\n            <footer className=\"footer\">\n                  <p>\n                        <a href=\"mailto:ardmanc@uw.edu\">Conner Ardman, Ian Wohlers</a> &copy; 2018 |&nbsp;\n                        <a href=\"#\" onClick={this.toggleAbout.bind(this)}>\n                              {about ? \"Home \" : \"About \"}\n                        </a>\n                        | Data From <a href=\"https://www.edamam.com\">api.edamam.com</a>\n                  </p>\n            </footer>\n         </Fragment>\n      );\n   }\n\n   toggleAbout() {\n      this.setState(prevState => {\n         return {\n            about: !prevState.about\n         };\n      })\n   }\n\n   returnHome() {\n      this.setState(prevState => {\n         return {\n            about: false\n         };\n      })\n   }\n\n   gotoAbout() {\n      this.setState(prevState => {\n         return {\n            about: true\n         };\n      })\n   }\n\n   fetchQueries(filters) {\n      this.setState({loading: true});\n      fetch(this.getAPIQuery(filters))\n         .then(checkStatus)\n         .then(recipes => this.parseRecipes(recipes, filters))\n      //TODO   .catch(showError);\n   }\n\n   getAPIQuery(filters) {\n      const {\n         numMeals,\n         maxCookTime,\n         carbs,\n         protein,\n         fat,\n         restrictions\n      } = filters;\n\n      const query = ''; // Send an empty query\n      let output = `${API}&q=${query}&to=${NUM_RECIPES}&time=${maxCookTime}` +\n         `&nutrients%5BCHOCDF%5D=${getRange(carbs / numMeals)}&nutrients%5BFAT%5D=` +\n         `${getRange(fat / numMeals)}&nutrients%5BPROCNT%5D=${getRange(protein / numMeals)}`;\n      if (restrictions.length > 0) {\n         output += `&health=${restrictions[0]}`; // API limits one health restriction\n      } return output;\n   }\n\n   parseRecipes(recipes, filters) {\n      let {hits} = recipes;\n      const {numMeals, restrictions} = filters;\n      hits = shuffleArray(hits);\n      if (restrictions.length > 1) {\n         hits = hits.filter(hit => {\n            const {recipe} = hit;\n            const {healthLabels} = recipe;\n            for (const restriction of restrictions) {\n               if (!healthLabels.includes(restriction)) {\n                  return false;\n               }\n            } return true;\n         });\n      }\n      if (hits.length === 0) {\n         //TODO\n         // getEl('plan-container').innerHTML =\n         //    'Sorry no matches found. Please try removing some filters.';\n      } else {\n         this.showRecipes(hits, numMeals);\n      }\n   }\n\n   showRecipes(hits, numMeals) {\n      this.setState({\n         extraRecipes: hits.slice(numMeals),\n         hits: hits.slice(0, numMeals),\n         loading: false\n      });\n   }\n\n   deleteRecipe(index) {\n      this.setState(prevState => {\n         const {extraRecipes, hits} = prevState;\n         hits[index] = extraRecipes.pop();\n         return {extraRecipes, hits};\n      });\n   }\n}\n\n// ******************************  HELPER FUNCTIONS ****************************** //\n\n/**\n * getRange - Get the minimum and maximum allowed values given user input\n *\n * @param  {String} value String to be parsed as integer for median of range.\n * @param  {Number} rangeOffset Percentage of increase/decrease allowed in range\n * @return {String} In form min-max\n */\nfunction getRange(value, rangeOffset = DEFAULT_TOLERANCE_RANGE) {\n   value = parseInt(value);\n   const diff = Math.round(value * rangeOffset);\n   const min = value - diff;\n   const max = value + diff;\n   return `${min}-${max}`;\n}\n\n/**\n * shuffleArray - Randomly shuffles an array based on Fisher Yate's Algorithm\n * https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle#The_modern_algorithm\n *\n * @param  {Array} arr Array to be shuffled\n * @return {Array}     input arr in a random order\n */\nfunction shuffleArray(arr) {\n   for (let i = arr.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      const temp = arr[i];\n      arr[i] = arr[j];\n      arr[j] = temp;\n   }\n   return arr;\n}\n\n/**\n * Gets the response's result text if successful, otherwise\n * returns the rejected Promise result with an error status and corresponding text\n * @param {object} response - fetch response to check for success/error\n * @return {object} - valid result JSON if response was successful, otherwise rejected\n *                    Promise result\n */\nfunction checkStatus(response) {\n   if ((response.status >= 200 && response.status < 300) || response.status === 0) {\n      return response.json();\n   } else {\n      return Promise.reject(new Error(response.status + \": \" + response.statusText));\n   }\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}