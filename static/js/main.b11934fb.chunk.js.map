{"version":3,"sources":["components/SignUpForm.js","components/Meal.js","components/MealList.js","components/Scheduler.js","components/GroceryList.js","components/About.js","components/BasicLayout.js","components/Slider.js","components/SliderGroup.js","components/CheckBoxGroup.js","components/Filters.js","components/NutritionLabel.js","components/Recipe.js","components/ShoppingList.js","components/RecipeList.js","components/RecipeGenerator.js","App.js","index.js"],"names":["SignUpForm","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","field","target","name","value","changes","setState","handleSignUp","preventDefault","signUpCallback","state","email","password","handleSignIn","signInCallback","undefined","inherits","createClass","key","react_default","a","createElement","className","htmlFor","id","type","onChange","onClick","Component","Meal","deleteMeal","meal","handleClick","openMeal","row","src","image","alt","label","popconfirm","placement","title","onConfirm","okText","cancelText","icon","MealList","renderMeals","meals","map","item","deleted","mealName","components_Meal","Scheduler","setScheduleFromCache","window","localStorage","getItem","retrieved","JSON","parse","schedule","openModal","visible","closeModal","getCellData","date","format","listData","forEach","push","content","dateCellRender","broken","concat","currentDate","find","updateSchedule","renderModal","es_button","ingredients","text","href","url","rel","instructions","renderList","components_MealList","newMeal","Link","to","calendar","onSelect","setDate","fullscreen","modal","closable","onOk","onCancel","footer","GroceryList","addTasksToStorage","list","tasks","filter","task","complete","setItem","stringify","toggleComplete","taskId","currentState","addTask","newDescription","length","newTask","description","_this2","forceUpdate","incomplete","GroceryList_TaskList","howToToggle","GroceryList_GroceryForm","howToAdd","addTaskToStorage","TaskList","_this3","taskComponents","eachTask","GroceryList_Item","Item","_this4","thisTask","getClassName","taskkey","GroceryForm","_this5","placeholder","About","Sider","Layout","Header","Content","BasicLayout","onCollapse","collapsed","onBreakpoint","aboutNav","nav","homeNav","renderRoute","Redirect","renderContent","components_About","components_Scheduler","layout","defaultCollapsed","collapsible","breakpoint","width","popover","components_GroceryList","trigger","clearSchedule","location","pathname","logOut","Slider","isGroup","_this$props","min","max","defaultValue","aria","inputChange","rotated","collapse","bind","pluralize","aria-label","removeDash","prevState","replace","_this$props2","unit","shouldPlural","SliderGroup","masterUnits","sliderPropsArray","masterValue","sliderProps","index","Slider_Slider","CheckBoxGroup","checkBoxes","change","checkBox","lower","toLowerCase","Filters","cookTime","carbs","protein","fat","restrictions","Set","_this$state","SliderGroup_SliderGroup","calcCalories","CheckBoxGroup_CheckBoxGroup","addRestriction","Button","bsStyle","bsSize","generateRecipes","saveRecipe","_this$state2","fetchQueries","numMeals","calories","maxCookTime","Array","from","_event$target","defineProperty","has","delete","add","_this$state3","MACROS","get","NutritionLabel","apply","arguments","hidden","_this$props$hit$recip","hit","recipe","totalNutrients","servings","yield","Math","round","PROCNT","quantity","CHOCDF","FAT","data","datasets","backgroundColor","labels","es","options","responsive","maintainAspectRatio","Recipe","loaded","setTimeout","_hit$recipe","ingredientLines","source","loadEffect","Panel","defaultExpanded","Heading","Title","toggle","role","del","Collapse","Body","Grid","fluid","Row","Col","xs","md","NutritionLabel_NutritionLabel","Footer","ingredient","deleteRecipe","ShoppingList","hits","toConsumableArray","RecipeList","loading","react_loading_default","color","height","class","ShoppingList_ShoppingList","Recipe_Recipe","Map","DEFAULT_TOLERANCE_RANGE","RecipeGenerator","handleSave","recipes","saved","extraRecipes","updateWindowDimensions","addEventListener","removeEventListener","innerWidth","innerHeight","RecipeGenerator_Sider","Filters_Filters","RecipeGenerator_Header","RecipeGenerator_Content","RecipeList_RecipeList","filters","fetch","getAPIQuery","then","checkStatus","parseRecipes","catch","console","log","output","getRange","arr","i","j","floor","random","temp","shuffleArray","healthLabels","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","restriction","includes","err","return","showRecipes","slice","pop","rangeOffset","parseInt","diff","response","status","json","Promise","reject","Error","statusText","App","addMeal","validateObjectForFirebase","curr","keys","currDate","ref","firebase","database","child","user","uid","updates","update","error","remove","setCurrentDate","errorMessage","auth","createUserWithEmailAndPassword","assertThisInitialized","message","signInWithEmailAndPassword","handleSignOut","signOut","renderHome","routerProps","components_BasicLayout","assign","renderAbout","renderGenerator","RecipeGenerator_RecipeGenerator","moment","renderSchedule","databaseSchedule","val","authUnRegFunc","onAuthStateChanged","once","on","msg","Switch","Route","path","exact","render","component","SignUpForm_SignUpForm","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","ReactDOM","BrowserRouter","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.b11934fb.chunk.js","sourcesContent":["/*\n    Hari Kaushik, Sai Ranganathan, Conner Ardman, Ian Wohlers\n    This is the signup form page which uses firebase to register the users by\n    their emails and passwords with Main Course and keeps their data in\n    one place.\n*/\nimport React, { Component } from 'react';\n\nexport class SignUpForm extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      email: undefined,\n      password: undefined,\n    };\n  }\n\n  // update state for specific field\n  handleChange = (event) => {\n    let field = event.target.name; //which input\n    let value = event.target.value; //what value\n\n    let changes = {}; //object to hold changes\n    changes[field] = value; //change this field\n    this.setState(changes); //update state\n  }\n\n  //handle signUp button\n  handleSignUp = (event) => {\n    event.preventDefault();\n    this.props.signUpCallback(this.state.email, this.state.password);\n  }\n\n  //handle signIn button\n  handleSignIn = (event) => {\n    event.preventDefault();\n    this.props.signInCallback(this.state.email, this.state.password);\n  }\n\n  render() {\n    return (\n      <div>\n         <form>\n           {/* email */}\n           <div className=\"form-group\">\n             <label htmlFor=\"email\">Email</label>\n             <input className=\"form-control\"\n               id=\"email\"\n               type=\"email\"\n               name=\"email\"\n               onChange={this.handleChange}\n               />\n           </div>\n\n           {/* password */}\n           <div className=\"form-group\">\n             <label htmlFor=\"password\">Password</label>\n             <input className=\"form-control\"\n               id=\"password\"\n               type=\"password\"\n               name=\"password\"\n               onChange={this.handleChange}\n               />\n           </div>\n\n           {/* buttons */}\n           <div className=\"form-group\">\n             <button className=\"btn btn-primary mr-2\" onClick={this.handleSignUp}>Sign-up</button>\n             <button className=\"btn btn-primary\" onClick={this.handleSignIn}>Sign-in</button>\n           </div>\n         </form>\n      </div>\n    )\n  }\n}\n","/*\n    Hari Kaushik, Sai Ranganathan, Conner Ardmen, Ian Wohlers\n    This component creates the meals using the Ant Design library which creates a modal\n    where there is a table of all the meals with their appropiate pictures which allows for them\n    to be deleted.\n*/\nimport React, { Component } from 'react';\nimport { Row, Icon, Popconfirm } from 'antd';\nimport 'whatwg-fetch';\nimport 'antd/dist/antd.css';\nimport '../bootstrap.css';\nimport '../App.css';\n\nclass Meal extends Component {\n\n    // allows for the delete functionality of a specific meal.\n    deleteMeal = () => {\n        this.props.deleteMeal(this.props.meal);\n    }\n\n    // the modal that is opened with all the meals on it\n\n    handleClick = () => {\n        this.props.openMeal(this.props.meal);\n    }\n\n    // this creates the whole table of rows of meals and also creates a button for you\n    // to delete the meal with a Popconfirm object from the ant design library.\n    render() {\n        let meal = this.props.meal;\n        return(\n            <Row className=\"meal\">\n                <Row className=\"clickable\" onClick={this.handleClick}>\n                    <div className=\"thumbnail\">\n                        <img className=\"pic\" src={meal.image} alt={meal.label} />\n                    </div>\n                    <div className=\"mealName\">\n                        {meal.label}\n                    </div>\n                </Row>\n                <div className=\"delete\">\n                    <Popconfirm placement=\"left\" title=\"Are you sure you want to delete this meal?\" onConfirm={this.deleteMeal} okText=\"Yes\" cancelText=\"No\">\n                        <Icon className=\"deleteBtn\" type=\"delete\"/>\n                    </Popconfirm>\n                </div>\n            </Row>\n        );\n    }\n}\n\nexport default Meal;\n","/*\n    Hari Kaushik, Sai Ranganathan, Conner Ardmen, Ian Wohlers \n    This is the Meal List component which just creates and returns a div containing\n    the rows of all the meals by mapping all the meal items returned by the api when you\n    click on add a meal to the calendar.\n*/\nimport React, { Component } from 'react';\nimport Meal from './Meal';\nimport 'whatwg-fetch';\nimport 'antd/dist/antd.css';\nimport '../bootstrap.css';\nimport '../App.css';\n\n// creates and returns a div component containing all the different meals\n// that were added to the calendar.\nclass MealList extends Component {\n    renderMeals = () => {\n        let meals = this.props.meals;\n        return(\n            <div>\n                {meals && meals.map(item => {\n                    if(!item.deleted)\n                        return(\n                            <Meal\n                                key={item.label}\n                                meal={item}\n                                deleteMeal={this.props.deleteMeal}\n                                openMeal={this.props.openMeal}\n                            />\n                        );\n                    else\n                        return(<div key={item.mealName} className=\"hidden\"></div>);\n                })}\n            </div>\n        );\n    }\n    render() {\n        // creates and returns an object that renders all the meals inside the mealList class\n        // used for the styling of the modal.\n        return(\n            <div className=\"mealList\">\n                {this.renderMeals()}\n            </div>\n        );\n    }\n}\n\nexport default MealList;\n","/*\n    Hari Kaushik, Sai Ranganathan, Conner Ardman, Ian Wohlers\n    This is the scheduler component which contiains the calendar as well as the information that will be\n    added once the user adds a meal onto the component.\n*/\n\nimport React, { Component } from 'react';\nimport { Calendar, Button, Modal, Popover } from 'antd';\nimport MealList from './MealList';\nimport { Link } from 'react-router-dom';\nimport 'whatwg-fetch';\nimport 'antd/dist/antd.css';\nimport '../bootstrap.css';\nimport '../App.css';\n\nclass Scheduler extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            newMeal: \"\",\n            visible: false,\n            openMeal: null\n        };\n    }\n\n    setScheduleFromCache = () => {\n        if(window.localStorage.getItem('schedule') !== null) {\n            let retrieved = JSON.parse(window.localStorage.getItem('schedule'));\n            this.setState({schedule: retrieved});\n        }\n    }\n\n    // set state of the meal\n    openMeal = meal => {\n        this.setState({openMeal: meal});\n    }\n\n    openModal = () => {\n        this.setState({\n            visible: true\n        });\n    }\n\n    closeModal = () => {\n        this.setState({\n            visible: false,\n            openMeal: null\n        });\n    }\n\n    getCellData = date => {\n        let meals = this.props.schedule[date.format(\"MMDDYY\")];\n        let listData = [];\n        meals && meals.forEach(meal => {\n            if(!meal.deleted){\n                listData.push(\n                    {type: 'normal',  content: meal.label}\n                );\n            }\n        });\n        return listData;\n    }\n\n    // render the data in the cell\n    dateCellRender = date => {\n        let listData = this.getCellData(date);\n        if(!this.props.broken){\n            return (\n                <ul className=\"events\">\n                    {\n                    listData.map(item => (\n                        <li key={item.content}>\n                            <span className={`event-${item.type}`}>●</span>\n                            {item.content}\n                        </li>\n                    ))\n                    }\n                </ul>\n            );\n        }\n    }\n\n    // remove a meal from the schedule\n    deleteMeal = meal => {\n        let meals = this.props.schedule[this.props.currentDate.format(\"MMDDYY\")];\n        meals.find(item => {\n            return item.label === meal.label;\n        }).deleted = true;\n        this.props.updateSchedule(meals);\n    }\n\n    // has the information for all the modal that is supposed to pop up when viewing the food\n    // added onto the calendar. Includes the image, the instructions and the youtube\n    // video all given back from the api.\n    renderModal = () => {\n        let meal = this.state.openMeal;\n        if(meal){\n            return(\n                <div className=\"modalContent\">\n                    <div className=\"modalButtons\">\n                        <Button className=\"back\" type=\"primary\" onClick={() => this.setState({openMeal: null})}>\n                            Back\n                        </Button>\n                    </div>\n                    <div className=\"imgContainer\">\n                        <img className=\"modalImage\" src={meal.image} alt={meal.label}/>\n                    </div>\n                    <h3>Ingredients</h3>\n                    <ul>\n                        {meal.ingredients.map(item => {\n                            return(<li key={item}>{item.text}</li>);\n                        })}\n                    </ul>\n                    <h3>Instructions</h3>\n                    <div className=\"modalButtons\">\n                        <Button type=\"primary\" href={meal.url} target=\"_blank\" rel=\"noopener noreferrer\">See Recipe</Button>\n                    </div>\n                    <p>{meal.instructions}</p>\n                </div>\n            );\n        } else {\n            return(\n                this.renderList()\n            );\n        }\n    }\n\n    renderList = () => {\n        return(\n            <MealList\n                meals={this.props.schedule[this.props.currentDate.format(\"MMDDYY\")]}\n                deleteMeal={this.deleteMeal}\n                openMeal={this.openMeal}\n            />\n        );\n    }\n\n    // rendering the entire page with buttons and the calendar interface and all other components\n    render() {\n        return(\n            <div className=\"scheduler\">\n                <Button className=\"getMeal\" type=\"primary\"><Link to='/generate'>Get A Meal</Link></Button>\n                <Button className=\"getMeal\" type=\"primary\" onClick={this.openModal}>View Details</Button>\n                <Calendar onSelect={this.props.setDate} dateCellRender={this.dateCellRender} fullscreen={!this.props.broken}/>\n                <Modal\n                    className=\"mealModal\"\n                    title={this.state.openMeal ? this.state.openMeal.mealName : \"\"}\n                    visible={this.state.visible}\n                    closable\n                    onOk={this.closeModal}\n                    onCancel={this.closeModal}\n                    footer={null}\n                >\n                    {this.renderModal()}\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default Scheduler;\n","/*\nHari Kaushik, Sai Ranganathan, Conner Ardman, Ian Wohlers\nThis is the Grocery List component which is later rendered in the app class. It allows the user to add to a\nshopping cart for the items they need to buy. It allows them to cross out items that they have bought and that\ndata updates constantly with local storage.\n*/\nimport React, { Component } from 'react';\n\nclass GroceryList extends Component {\n  constructor(props){\n    super(props); //pass up to parent\n\n    //initialize state\n    this.state = {\n      tasks: [] //items or tasks array\n    };\n  }\n\n  /* allows to add the tasks or the items to buy into local storage */\n  addTasksToStorage = () => {\n    let list = this.state.tasks.filter(task => {\n      return !task.complete;\n    });\n    window.localStorage.setItem('tasks', JSON.stringify(list));\n  }\n\n  /*\n    this function is equivalent to the onload function that initializes and sets\n    the local storage\n  */\n  componentDidMount() {\n    if(window.localStorage.getItem('tasks') !== null) {\n      let retrieved = JSON.parse(window.localStorage.getItem('tasks'));\n      let list = [];\n      retrieved.forEach(item => {\n        if(!item.complete) {\n          list.push({\"id\": item.id, \"description\": item.description, \"complete\": item.complete});\n        }\n        this.setState({tasks: list});\n        this.forceUpdate();\n      })\n    }\n  }\n\n  /* toggles the tasks to have a property of being either completed or not */\n  toggleComplete = (taskId) => {\n    this.setState((currentState) => { //update the state\n      let updatedTasks = currentState.tasks.map((task) => {\n        if(task.id === taskId){\n          task.complete = !task.complete; // changes the state of the list item to the opposite\n          this.addTasksToStorage(); // add tasks to the local storage\n        }\n        return task;\n      })\n      return {tasks: updatedTasks}\n    })\n  }\n\n  /*\n    function to add task to the current state of the task array and\n    adds it into local storage.\n  */\n  addTask = (newDescription) => {\n    if(newDescription.length > 0) {\n      this.setState((currentState) => {\n        let newTask = {\n          id: currentState.tasks.length+1,\n          description: newDescription,\n          complete: false\n        }\n        currentState.tasks.push(newTask); //add task, better to copy array\n        this.addTasksToStorage();\n        return {tasks: currentState.tasks}\n      })\n    }\n  }\n\n  /*\n    function for rendering the contents of the grocery list which will then be\n    added to the DOM when the component is instantiated. Creates\n  */\n  render() {\n    //do data processing\n    let incomplete = this.state.tasks.filter((task) => !task.complete);\n\n    return (\n      <div>\n      <div className=\"form\">\n      <div className=\"container\">\n        <p className=\"lead\"> Items in shopping cart: {incomplete.length}</p>\n        <TaskList howToToggle={this.toggleComplete} tasks={this.state.tasks} />\n        <GroceryForm howToAdd={this.addTask} addTasksToStorage={this.addTaskToStorage}/>\n      </div>\n      </div>\n      </div>\n    );\n  }\n}\n\nclass TaskList extends Component {\n  render() {\n    //do data processing\n    let taskComponents = this.props.tasks.map((eachTask) => {\n      let singleTask = <Item\n                          //taskkey={eachTask.id}\n                          key={eachTask.id}\n                          task={eachTask}\n                          howToToggle={this.props.howToToggle}\n                          /> //pass callback down\n      return singleTask;\n    })\n\n    return (\n      <ol>\n        {taskComponents}\n      </ol>\n    );\n  }\n}\n\n/*\n  This is the item component which takes in props for the key and the on click class\n  that creates a list item which is then rendered and added on to the grocery list.\n  It also has a click property that crosses out the item when clicked and then updates\n  this information in the local storage.\n\n*/\nclass Item extends Component {\n  getClassName() {\n    let className = 'groceryItem';\n    if(this.props.task.complete){\n      className = ' font-strike'; // strike out the item when the item is bought\n    }\n    return className;\n  }\n\n  // handle the click in order to toggle the complete property from true to false or\n  // vise versa.\n  handleClick = () => {\n    this.props.howToToggle(this.props.task.id);\n  }\n\n  render() {\n    let thisTask = this.props.task; //can give local name for readability\n    return (\n      <li className={this.getClassName()} key={this.props.taskkey} onClick={this.handleClick} >\n        {thisTask.description}\n      </li>\n    );\n  }\n}\n\n/*\n  Grocery From component which makes a form and creates a Grocery list component inside it\n  which has a button in order to add to the list\n*/\nclass GroceryForm extends Component {\n  constructor(props){\n    super(props);\n    this.state = {newTask: ''}; //what is typed in\n  }\n\n  // handle change event by setting the state of the task to the target value\n  handleChange = (event) => {\n    let value = event.target.value;\n    this.setState({newTask: value})\n  }\n\n  // handle click event\n  handleClick = (event) => {\n    event.preventDefault();\n    this.props.howToAdd(this.state.newTask);\n    this.setState({newTask: \"\"});\n  }\n\n  render() {\n    return (\n      <form>\n        <input\n          className=\"form-control mb-3\"\n          placeholder=\"Add to Grocery List\"\n          value={this.state.newTask}\n          onChange={this.handleChange}\n          />\n        <button className=\"btn btn-primary\" onClick={this.handleClick}>\n          Add item to list\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default GroceryList; //export the grocery list component\n","/*\n    Hari Kaushik, Sai Ranganathan, Conner Ardman, Ian Wohlers\n    This is the about page which is rendered with a new route when the button is clicked on the\n    slider bar. This pages talks about the application itself and what it does.\n*/\nimport React, { Component } from 'react';\n\nclass About extends Component {\n   render() {\n      return (\n        <div className=\"col\" id=\"about-page\">\n            <div>\n                <h1>About Main Course</h1>\n                <p>\n                    The original idea here was to create an application that would somehow make the\n                    lives of students easier. As a student myself, I found that I was constantly\n                    eating out, because I was running out of ideas of what to make. As a result, I\n                    was spending more money than I wanted to on food. To solve this problem, we created\n                    Main Course. Main Course is a mobile-first web application that is a combination of two\n                    different apps aimed at making the cooking process simpler. The user simply inputs\n                    their meal preferences indicated by sliders, we generate a new list of recipes for them.\n                    They will then be allowed to add their meals to the calnedar interface, which can help\n                    them keep track of when they want to make their food. Additionally, there is a grocery\n                    list interface which helps them plans out the ingredients that they have to buy. The\n                    ida is pretty simple, and by adding filters based on nutritional goals, we believe that\n                    Main Course could be a perfect way that students can <strong>eat healthy and save money </strong>\n                    in a more efficient manner.\n                </p>\n            </div>\n\n            <div>\n                <h2>Some Limitations</h2>\n                <p>\n                    The orginal goal here was to allow a budget to be part of the filters,\n                    and to provide an entire weeks worth of recipes. Additionally, the original\n                    wireframe contained a few more filters. Unfortunately, limitations of the API\n                    are preventing this currently. There is a great deal of rate limiting happening\n                    from the API, preventing the site from gathering all of the information it needs.\n                    Additionally, we wanted to show the actual recipe on the screen, but this is another\n                    limitation of the free version of this API.\n                </p>\n            </div>\n\n            <div>\n                <h2>About The Development</h2>\n                <p>\n                We used LESS CSS extention in order to style the webpages, as it allowed us\n                to create simple variables that control the look adn the feel of the site.\n                Changing any of the variables at the top of the Less file should\n                substantially change the look of the site. We built this web application with\n                a mobile first approach, meaning all  of the default styles are also built for\n                smaller devices, and it works on all mobile devices. That said, the CSS should\n                scale nicely on a larger screen in a multi-column format.\n                </p>\n                <p>\n                This web application was built using React JS, with multiple components\n                that were rendered onto to the page. We had used a Basic Layout component\n                to place and keep track of all the other components, which was then instantiated\n                in the App component and displayed on the DOM. We included clien-side routing in\n                this stage of the project in order to keep track of all the different web pages\n                we had that were part of the entire application, and we utilized firebase servers in\n                order to include the idea of having users, and would keep track of their data.\n               </p>\n            </div>\n        </div>\n      );\n   }\n}\n\nexport default About;\n","/*\n  Hari Kaushik , Sai Ranganathan, Conner Ardman, Ian Wohlers\n  This is the basic layout component which contains all the structural formatting for the entire\n  app. It imports external libraries such as ant design, bootstrap and moment in order to stye the\n  entire structure of the application. It creates and instantiates all the other objects and renders\n  it onto this component.\n*/\n\nimport React, { Component } from 'react';\nimport { Layout, Button, Popconfirm, Popover} from 'antd';\nimport Scheduler from './Scheduler';\nimport GroceryList from './GroceryList';\nimport About from './About';\nimport 'antd/dist/antd.css';\nimport '../bootstrap.css';\nimport '../App.css';\nimport { Redirect } from 'react-router-dom';\nconst { Sider, Header, Content } = Layout;\n\nclass BasicLayout extends Component {\n  constructor(props){\n    super(props);\n    // the state class for the collapsed referring to the side bar\n    this.state = {\n      collapsed: false,\n      broken: false\n    };\n  }\n\n  // sets the state of the collapsed variable to having the attribute of\n  // being collapsed down.\n  onCollapse = (collapsed) => {\n    this.setState({ collapsed });\n  }\n\n  onBreakpoint = (broken) => {\n    this.setState({ broken });\n  }\n\n  aboutNav = () =>  {\n    this.setState({nav: 'about'});\n  }\n\n  homeNav = () => {\n    this.setState({nav: 'main'});\n  }\n\n  renderRoute = () =>  {\n    if(this.state.nav === 'about') {\n      return (\n        <Redirect to='/about'/>\n      );\n    } else {\n      return (\n        <Redirect to='/'/>\n      );\n    }\n  }\n\n  renderContent = () => {\n    if(this.props.content === \"about\"){\n      return(\n        <About\n          currentDate={this.props.currentDate}\n          setDate={this.props.setDate}\n          schedule={this.props.schedule}\n          updateSchedule={this.props.updateSchedule}\n        />\n      );\n    } else {\n      return(\n        <Scheduler\n          currentDate={this.props.currentDate}\n          setDate={this.props.setDate}\n          schedule={this.props.schedule}\n          updateSchedule={this.props.updateSchedule}\n          broken={this.state.broken}\n        />\n      );\n    }\n  }\n  // function renders and returns the layout of the app while instantiating\n  // items within the structure.\n  render() {\n    if(this.state.nav && this.state.nav != this.props.content) {\n      return(\n        this.renderRoute()\n      );\n    }\n    return (\n      <Layout className=\"basicLayout\">\n        <Sider\n          defaultCollapsed\n          collapsible\n          collapsed={this.state.collapsed}\n          onCollapse={this.onCollapse}\n          breakpoint='lg'\n          className=\"sider\"\n          width={this.state.broken ? \"100%\" : \"20%\"}\n          onBreakpoint={this.onBreakpoint}\n        >\n          <div onClick={this.homeNav} className={this.state.collapsed ? \"hidden\" : \"pageTitle\"}>\n            <h1 className=\"title\">Main Course</h1>\n          </div>\n          <div className=\"sideButtons\">\n            <Popover placement='right' content={<GroceryList />} trigger=\"click\" title=\"My Grocery List\">\n              <Button className={this.state.collapsed ? \"hidden\" : \"groceryBtn\"} type=\"primary\">\n                <span>Grocery List</span>\n              </Button>\n            </Popover>\n            <Popconfirm placement='right' title=\"Are you sure you want to clear the schedule?\" onConfirm={this.props.clearSchedule} okText=\"Yes\" cancelText=\"No\">\n              <Button className={this.state.collapsed ? \"hidden\" : \"clearAll\"} type=\"primary\">\n                Clear schedule\n              </Button>\n            </Popconfirm>\n            <div>\n            </div>\n            <Button className={this.state.collapsed ? \"hidden\" : \"clearAll\"} onClick={() => {\n                  if (this.props.location.pathname === '/about') {\n                     this.homeNav();\n                  } else {\n                     this.aboutNav();\n                  }\n               }} type=\"primary\">\n               {this.props.location.pathname === '/about' ? 'Calendar' : 'About Us'}\n             </Button>\n             <Popconfirm placement='right' title=\"Are you sure you want to log out?\" onConfirm={this.props.logOut} okText=\"Yes\" cancelText=\"No\">\n                <Button className={this.state.collapsed ? \"hidden\" : \"clearAll\"} type=\"primary\">\n                   Log Out\n                </Button>\n             </Popconfirm>\n          </div>\n        </Sider>\n        <Layout className={this.state.collapsed ? \"main main-grow\" : \"main\"}>\n          <Header className=\"header\">\n            <h2 className=\"currentDay\">\n              {this.props.currentDate.format(\"MMMM Do, YYYY\")}\n            </h2>\n          </Header>\n          <Content className=\"mainContent\" >\n            {this.renderContent()}\n          </Content>\n        </Layout>\n      </Layout>\n    );\n  }\n}\n\nexport default BasicLayout;\n","/*\n    Hari Kaushik, Sai Ranganathan, Conner Ardman, Ian Wohlers\n    This is the slider component which is used as a side bar with options for actions in the entire\n    app.\n*/\nimport React, { Component } from 'react';\n\nexport class Slider extends Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         collapsed: this.props.isGroup !== true\n      };\n   }\n\n   render() {\n      const {name, id, min, max, defaultValue, aria, inputChange, value} = this.props;\n      const {collapsed} = this.state;\n      const rotated = collapsed ? \" rotated\" : \"\";\n\n      return (\n         <div>\n            {name ?\n               <h3\n                  className={\"chevron\" + rotated}\n                  onClick={this.collapse.bind(this)}>\n                  {name}\n               </h3>\n               : null\n            }\n            {!collapsed ?\n               <div>\n                  <label htmlFor={id}>\n                     {value}{this.pluralize(value)}\n                  </label>\n                  <input\n                     aria-label={aria != null ? aria : this.removeDash(id)}\n                     type=\"range\"\n                     min={min}\n                     max={max}\n                     defaultValue={defaultValue}\n                     className=\"slider\"\n                     id={id}\n                     onChange={inputChange}\n                     />\n               </div>\n               : null}\n            </div>\n      );\n   }\n\n   // collapse function to take care of closing and opening the side bar\n   collapse() {\n      this.setState(prevState => {\n         return {\n            collapsed: !prevState.collapsed\n         };\n      });\n   }\n\n   removeDash(id) {\n      return id.replace(/-/g, ' ');\n   }\n\n   pluralize(value) {\n      const {unit, shouldPlural} = this.props;\n      return value > 1 && shouldPlural ? unit + 's' : unit;\n   }\n}\n","/*\n    Hari Kaushik, Sai Ranganathan, Conner Ardman, Ian Wohlers\n    This is the slider group component which renders the slider\n    component and passes in the necessary props to it while returning back\n    the slider used in the app.\n*/\nimport React, { Component } from 'react';\nimport { Slider } from './Slider';\n\nexport class SliderGroup extends Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         collapsed: true\n      };\n   }\n\n   render() {\n      const {masterUnits, sliderPropsArray, masterValue, title} = this.props;\n      const {collapsed} = this.state;\n      const rotated = collapsed ? \" rotated\" : \"\";\n      return (\n         <div>\n            <h3\n               className={\"chevron\" + rotated}\n               onClick={this.collapse.bind(this)}>\n               {title}\n            </h3>\n            <div className={collapsed ? \"hidden\" : null}>\n               <label>\n                  ({masterValue} {masterUnits})\n               </label>\n               {sliderPropsArray.map((sliderProps, index) => {\n                  const {id, unit, min, max, defaultValue, aria, value, inputChange} = sliderProps;\n                  return (\n                     <Slider\n                        key={index}\n                        id={id}\n                        unit={unit}\n                        min={min}\n                        max={max}\n                        defaultValue={defaultValue}\n                        aria={aria}\n                        value={value}\n                        inputChange={inputChange}\n                        isGroup={true}\n                        />\n                  );\n               })}\n            </div>\n         </div>\n      );\n   }\n\n   // set state to collapsed and toggle\n   collapse() {\n      this.setState(prevState => {\n         return {\n            collapsed: !prevState.collapsed\n         };\n      });\n   }\n}\n","/*\n    Hari Kaushik, Sai Ranganathan, Conner Ardman, Ian Wohlers\n    This is the component that holds the checkbox group that is in the sliders of the recipe generator\n    which holds the options that asks the user for vegetarian/vegan options.\n*/\nimport React, { Component } from 'react';\n\nexport class CheckBoxGroup extends Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         collapsed: true\n      };\n   }\n\n   render() {\n      const {title, checkBoxes, change} = this.props;\n      const {collapsed} = this.state;\n      const rotated = collapsed ? \" rotated\" : \"\";\n      return (\n         <div>\n            <h3\n               className={\"chevron\" + rotated}\n               onClick={this.collapse.bind(this)}>\n               {title}\n            </h3>\n            <div className={collapsed ? \"hidden\" : null}>\n               {checkBoxes.map((checkBox, index) => {\n                  const lower = checkBox.toLowerCase();\n                  return (\n                     <div className=\"check-group\" key={index}>\n                        <input\n                           type=\"checkbox\"\n                           id={lower}\n                           defaultValue={lower}\n                           onChange={change} />\n                        <label htmlFor={lower}>\n                           {checkBox}\n                        </label>\n                     </div>\n                  );\n               })}\n            </div>\n         </div>\n      );\n   }\n\n   collapse() {\n      this.setState(prevState => {\n         return {\n            collapsed: !prevState.collapsed\n         };\n      });\n   }\n}\n","/*\n    Hari Kaushik, Sai Ranganathan, Conner Ardman, Ian Wohlers\n    This is the slider component which holds all of the filters for the recipe generator. Using this data\n    that the user enters, a query is made to the API which gets back information that is then rendered\n    in the recipe generator module.\n*/\nimport React, { Component } from 'react';\nimport { Slider } from './Slider';\nimport { SliderGroup } from './SliderGroup';\nimport { CheckBoxGroup } from './CheckBoxGroup';\nimport { MACROS } from './RecipeGenerator';\nimport { Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nexport class Filters extends Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         meals: 3,\n         cookTime: 15,\n         carbs: 206,\n         protein: 146,\n         fat: 67,\n         restrictions: new Set()\n      };\n   }\n\n   render() {\n      const {meals, cookTime, carbs, protein, fat} = this.state;\n      return (\n         <section id=\"filters\">\n            <div className=\"pageTitle\">\n               <Link to='/'><h1>Main Course</h1></Link>\n            </div>\n\n            <Slider\n                  className=\"control-option\"\n                  name=\"Meals Per Day\"\n                  id=\"meals\"\n                  unit=\" Meal\"\n                  min=\"1\"\n                  max=\"7\"\n                  defaultValue=\"3\"\n                  inputChange={this.inputChange.bind(this)}\n                  value={meals}\n                  shouldPlural={true}\n                  />\n\n            <Slider\n                  className=\"control-option\"\n                  name=\"Max Cook Time Per Meal\"\n                  id=\"cookTime\"\n                  unit=\" Minute\"\n                  min=\"5\"\n                  max=\"120\"\n                  defaultValue=\"15\"\n                  inputChange={this.inputChange.bind(this)}\n                  value={cookTime}\n                  shouldPlural={true}\n                  />\n\n            <SliderGroup\n                  className=\"control-option\"\n                  masterUnits=\"Calories\"\n                  masterValue={this.calcCalories()}\n                  title=\"Daily Macronutrients\"\n                  sliderPropsArray={[\n                     {\n                        aria: \"Carbohydrates Per Meal\",\n                        id: \"carbs\",\n                        unit: \"g carbs\",\n                        min: \"25\",\n                        max: \"400\",\n                        defaultValue: \"206\",\n                        value: carbs,\n                        inputChange: this.inputChange.bind(this)\n                     },\n                     {\n                        aria: \"Protein Per Meal\",\n                        id: \"protein\",\n                        unit: \"g protein\",\n                        min: \"25\",\n                        max: \"400\",\n                        defaultValue: \"146\",\n                        value: protein,\n                        inputChange: this.inputChange.bind(this)\n                     },\n                     {\n                        aria: \"Fat Per Meal\",\n                        id: \"fat\",\n                        unit: \"g fat\",\n                        min: \"5\",\n                        max: \"200\",\n                        defaultValue: \"67\",\n                        value: fat,\n                        inputChange: this.inputChange.bind(this)\n                     }\n                  ]}\n               />\n\n            <CheckBoxGroup\n                  className=\"control-option\"\n                  checkBoxes={['vegan', 'vegetarian']}\n                  title=\"Dietary Restrictions\"\n                  change={this.addRestriction.bind(this)}\n                  />\n\n            <div className=\"button-group\">\n               <Button\n                     bsStyle=\"primary\"\n                     bsSize=\"large\"\n                     type=\"button\"\n                     onClick={this.generateRecipes.bind(this)}>\n                     Generate Recipes\n               </Button>\n               <Button\n                     bsStyle=\"primary\"\n                     bsSize=\"large\"\n                     type=\"button\"\n                     onClick={this.props.saveRecipe}>\n                     Save Recipes\n               </Button>\n            </div>\n         </section>\n      );\n   }\n\n   // fetches queries and generates recipes from the API\n   generateRecipes() {\n      const {meals, cookTime, carbs, protein, fat, restrictions} = this.state;\n      const {fetchQueries} = this.props;\n      const filters = {\n         numMeals: meals,\n         calories: this.calcCalories(),\n         maxCookTime: cookTime,\n         carbs: carbs,\n         protein: protein,\n         fat: fat,\n         restrictions: Array.from(restrictions)\n      };\n      fetchQueries(filters)\n   }\n\n   // change state of the id if the input in sliders are changed\n   inputChange(event) {\n      const {id, value} = event.target;\n      this.setState({\n         [id]: value\n      });\n   }\n\n   // adds the restrictions of whether the user wants vegan/vegatarian food.\n   addRestriction(event) {\n      const {value} = event.target;\n      this.setState(prevState => {\n         const {restrictions} = prevState;\n         if (restrictions.has(value)) {\n            restrictions.delete(value);\n         } else {\n            restrictions.add(value);\n         }\n         return {restrictions};\n      });\n   }\n\n   // method for calculating the calories given the fat, crabs, and protein content\n   calcCalories() {\n      const {fat, carbs, protein} = this.state;\n      return (fat * MACROS.get('fat')) +\n         (protein * MACROS.get('protein')) +\n         (carbs * MACROS.get('carbs'));\n   }\n}\n","/*\n    Hari Kaushik, Sai Ranganathan, Conner Ardman, Ian Wohlers\n    This is the nutrition label which is the component that has all the information that belongs\n    on the slider.\n*/\nimport React, { Component } from 'react';\nimport { MACROS } from './RecipeGenerator';\nimport { Pie } from 'react-chartjs-2';\n\nexport class NutritionLabel extends Component {\n   render() {\n      const {hidden} = this.props;\n      const {totalNutrients, calories} = this.props.hit.recipe;\n      const servings = this.props.hit.recipe.yield;\n      const protein = Math.round(totalNutrients.PROCNT.quantity);\n      const carbs = Math.round(totalNutrients.CHOCDF.quantity);\n      const fat = Math.round(totalNutrients.FAT.quantity);\n      const data = {\n         datasets: [\n            {\n               data: [\n                  protein * MACROS.get('protein'),\n                  carbs * MACROS.get('carbs'),\n                  fat * MACROS.get('fat')\n               ],\n               backgroundColor: ['red', 'green', 'blue']\n            }\n         ],\n         labels: ['Protein Cals', 'Carbs Cals', 'Fat Cals']\n      };\n      const options = {\n         responsive: true,\n         maintainAspectRatio: false\n      };\n\n      return (\n         <div className={hidden ? \"hidden\" : \"\"}>\n            <div className=\"chart\">\n               <Pie data={data} options={options} />\n               <ul>\n                  <li><strong>Servings:</strong>&nbsp;{servings}</li>\n                  <li><strong>Calories:</strong>&nbsp;{Math.round(calories)}</li>\n                  <li><strong>Protein:</strong>&nbsp;{protein + \"g\"}</li>\n                  <li><strong>carbs:</strong>&nbsp;{carbs + \"g\"}</li>\n                  <li><strong>fat:</strong>&nbsp;{fat + \"g\"}</li>\n               </ul>\n            </div>\n         </div>\n      );\n   }\n}\n","/*\n    Hari Kaushik, Sai Ranganathan, Conner Ardman, Ian Wohlers \n    This is the recipe component which holds the information for every single\n    recipe that is generated from the API. It holds all of the informaiton in a\n    panel and has info about the nutritiion, as well as the ingredients used in the\n    recipe, and a picture to go with it.\n*/\nimport React, { Component } from 'react';\nimport { NutritionLabel } from './NutritionLabel';\nimport { Panel, Grid, Row, Col } from 'react-bootstrap';\n\nconst TRANSITION_TIME = 1000; // in ms\n\nexport class Recipe extends Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         loaded: false\n      };\n   }\n\n   // sets state of loaded to be true\n   componentDidMount() {\n      setTimeout(() => {\n         this.setState({loaded: true});\n      }, 0);\n   }\n\n   render() {\n      const {hit} = this.props;\n      const {label, image, ingredientLines, url, source} = hit.recipe;\n      const {loaded} = this.state;\n      const loadEffect = loaded ? \" loaded\" : \"\";\n\n      return (\n        <Panel defaultExpanded={false} className={\"recipe\" + loadEffect}>\n            <Panel.Heading>\n                <Panel.Title toggle>\n                    {label}\n                </Panel.Title>\n                <div\n                  role=\"button\"\n                  className=\"del\"\n                  onClick={this.del.bind(this)}>X</div>\n            </Panel.Heading>\n            <Panel.Collapse>\n                <Panel.Body>\n                    <Grid fluid={true}>\n                        <Row className=\"show-grid\" id=\"grid\">\n                            <Col xs={12} md={6}>\n                                <img src={image} alt={label} />\n                            </Col>\n                            <Col xs={12} md={6}>\n                                <div className = \"pieContainer\">\n                                    <NutritionLabel hit={hit} />\n                                </div>\n                            </Col>\n                        </Row>\n                    </Grid>\n                </Panel.Body>\n                <Panel.Footer>\n                    <h1>\n                        <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">{\"Full Recipe From \" + source}</a>\n                    </h1>\n\n                    <ul>\n                        {ingredientLines.map((ingredient, index) => {\n                            return <li key={index}>{ingredient}</li>\n                        })}\n                    </ul>\n                </Panel.Footer>\n            </Panel.Collapse>\n        </Panel>\n      );\n   }\n\n   del() {\n      // Fade out and back in\n      this.setState({loaded: false});\n      setTimeout(() => {\n         this.props.deleteRecipe();\n         this.setState({loaded: true});\n      }, TRANSITION_TIME);\n   }\n\n}\n","/*\n    Hari Kaushik, Sai Ranganathan, Conner Ardman, Ian Wohlers\n    This is the shopping list component that goes on the recipe generator,\n    which compiles all the ingredients needed for the meals generator and adds them all\n    to a single dropdown panel with all that infomration.\n*/\nimport React, { Component } from 'react';\nimport {Panel} from 'react-bootstrap';\n\nexport class ShoppingList extends Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         collapsed: false,\n         loaded: false\n      };\n   }\n\n   componentDidMount() {\n      setTimeout(() => {\n         this.setState({loaded: true});\n      }, 0);\n   }\n\n   render() {\n      const {hits} = this.props;\n      let ingredients = [];\n      hits.forEach(hit => {\n         ingredients = [...ingredients, ...hit.recipe.ingredientLines];\n      });\n\n      const {collapsed, loaded} = this.state;\n      const loadEffect = loaded ? \" loaded\" : \"\";\n      return (\n        <Panel id=\"collapsible-panel-example-2\" defaultExpanded={false} className={\"recipe\" + loadEffect}>\n            <Panel.Heading>\n                <Panel.Title toggle>\n                    Shopping List\n                </Panel.Title>\n            </Panel.Heading>\n            <Panel.Collapse>\n                <Panel.Body>\n                    <ul className={collapsed ? \"hidden\" : null}>\n                        {ingredients.map((ingredient, index) => {\n                            return <li key={index}>{ingredient}</li>\n                        })}\n                    </ul>\n                </Panel.Body>\n            </Panel.Collapse>\n        </Panel>\n      );\n   }\n\n   // set state to collapse to toggle opening and closing the panel\n   collapse() {\n      this.setState(prevState => {\n         return {\n            collapsed: !prevState.collapsed\n         };\n      });\n   }\n\n}\n","/*\n    Hari Kaushik, Sai Ranganathan, Conner Ardman, Ian Wohlers\n    This component holds all of the Recipes currently displayed in the Recipe Generator.\n*/\n\nimport React, { Component } from 'react';\nimport { Recipe } from './Recipe';\nimport { ShoppingList } from './ShoppingList';\nimport ReactLoading from 'react-loading';\n\nexport class RecipeList extends Component {\n   render() {\n      const {hits, deleteRecipe, loading} = this.props;\n      const loaded = hits.length !== 0;\n\n      return (\n         <section id=\"recipes\">\n            <h1>Your Custom Meal Plan</h1>\n\n            <div id=\"plan-container\" className={!loaded ? \"hidden\" : null}>\n                  {loading ?\n                     <div>\n                        <ReactLoading id=\"loading\" type={\"spin\"} color={\"Black\"} height={150} width={150}/>\n                        <div class=\"push\"></div><div class=\"push\"></div>\n                     </div>\n                     :\n                     <div>\n                     <ShoppingList hits={hits} />\n                     {hits.map((hit, index) => {\n                           return <Recipe\n                           hit={hit}\n                           key={index}\n                           deleteRecipe={() => deleteRecipe(index)} />\n                     })}\n                     </div>\n                  }\n            </div>\n\n            <p id=\"plan-placeholder\" className={loaded ? \"hidden\" : null}>\n               {loading ?\n                  <ReactLoading id=\"loading\" type={\"spin\"} color={\"Black\"} height={150} width={150} /> :\n                  <p>Meal plan will appear here once it is created!</p>}\n               <div class=\"push\"></div><div class=\"push\"></div>\n            </p>\n         </section>\n      );\n   }\n}\n","/*\n    Hari Kaushik, Sai Ranganathan, Conner Ardman, Ian Wohlers\n    This is the main component for the recipe generation page. It contains all of\n    the state related to this page and parses new recipes.\n*/\n\nimport React, { Component } from 'react'; //import React Component\nimport { Filters } from './Filters';\nimport { RecipeList } from './RecipeList';\nimport { Redirect } from 'react-router-dom';\nimport { Layout } from 'antd';\nconst { Header, Content, Sider } = Layout;\n\n// Maping of macronutrients to calories per gram\nexport const MACROS = new Map([\n   ['carbs', 4],\n   ['fat', 9],\n   ['protein', 4]\n]);\n\n/**\n* The API has a lot of filtering limitations, so this is how many\n* queries to make so we can do custom filtering on the client side.\n*/\nconst NUM_RECIPES = 100;\n\n// Default amount of tolerance on entred mactronutrients.\nconst DEFAULT_TOLERANCE_RANGE = .2;\n\n// Storing API keys here for the purposes of this class.\n// TODO: add a server as a layer of abstraction between API keys and clients\nconst API = 'https://api.edamam.com/search?app_id=4fba7f21&app_key=015209fd4e63d9db67f22a621a26ea4a';\n\nexport class RecipeGenerator extends Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         extraRecipes: [],\n         loading: false,\n         hits: [], // A hit is the term for a recipe in the API\n         saved: false,\n         width: 0\n      };\n   }\n\n   componentDidMount() {\n      this.updateWindowDimensions();\n      window.addEventListener('resize', this.updateWindowDimensions.bind(this));\n   }\n\n   componentWillUnmount() {\n      window.removeEventListener('resize', this.updateWindowDimensions.bind(this));\n   }\n\n   /**\n    * updateWindowDimensions - Viewport width code adapted from here:\n    * https://stackoverflow.com/questions/36862334/get-viewport-window-height-in-reactjs\n    */\n   updateWindowDimensions() {\n      this.setState({\n         width: window.innerWidth,\n         height: window.innerHeight\n      });\n   }\n\n   handleSave = () => {\n      let recipes = this.state.hits.map(hit => {\n         return hit.recipe;\n      });\n\n      this.props.saveRecipe(recipes);\n      this.setState({saved: true});\n   }\n\n   render() {\n      const {hits, loading, width} = this.state;\n      if(this.state.saved) {\n         return(\n            <Redirect to=\"/\"/>\n         );\n      }\n\n      return (\n         <div>\n         {\n            width > 992 ?\n            <Layout className=\"basicLayout\">\n              <Sider\n                breakpoint='lg'\n                className=\"sider\"\n                width=\"20%\"\n              >\n                  <Filters fetchQueries={this.fetchQueries.bind(this)} saveRecipe={this.handleSave}/>\n              </Sider>\n              <Layout className={this.state.collapsed ? \"main main-grow\" : \"main\"}>\n                <Header className=\"header\">\n                  <h2 className=\"currentDay\">\n                    {this.props.currentDate.format(\"MMMM Do, YYYY\")}\n                  </h2>\n                </Header>\n                <Content className=\"mainContent\" >\n                  <RecipeList hits={hits} deleteRecipe={this.deleteRecipe.bind(this)} loading={loading}/>\n                </Content>\n              </Layout>\n            </Layout>\n            :\n            <Layout className=\"basicLayout\" id=\"fullbg\">\n                <Header className=\"header\">\n                  <h2 className=\"currentDay\">\n                    {this.props.currentDate.format(\"MMMM Do, YYYY\")}\n                  </h2>\n                </Header>\n                <Content className=\"mainContent\" >\n                   <Filters fetchQueries={this.fetchQueries.bind(this)} saveRecipe={this.handleSave}/>\n                   <RecipeList hits={hits} deleteRecipe={this.deleteRecipe.bind(this)} loading={loading}/>\n                </Content>\n            </Layout>\n         }\n      </div>\n      );\n   }\n\n   /**\n    * fetchQueries - Requests the API and displays recipes to the page\n    *\n    * @param  {Object} filters user selected filters\n    */\n   fetchQueries(filters) {\n      this.setState({loading: true});\n      fetch(this.getAPIQuery(filters))\n         .then(checkStatus)\n         .then(recipes => this.parseRecipes(recipes, filters))\n         .catch(console.log);\n   }\n\n   /**\n    * getAPIQuery - Generates a URL to query from given filter parameters\n    *\n    * @param  {Object} filters user selected filters\n    * @return {String}         URL to query from\n    */\n   getAPIQuery(filters) {\n      const {\n         numMeals,\n         maxCookTime,\n         carbs,\n         protein,\n         fat,\n         restrictions\n      } = filters;\n\n      const query = ''; // Send an empty query\n      let output = `${API}&q=${query}&to=${NUM_RECIPES}&time=${maxCookTime}` +\n         `&nutrients%5BCHOCDF%5D=${getRange(carbs / numMeals)}&nutrients%5BFAT%5D=` +\n         `${getRange(fat / numMeals)}&nutrients%5BPROCNT%5D=${getRange(protein / numMeals)}`;\n      if (restrictions.length > 0) {\n         output += `&health=${restrictions[0]}`; // API limits one health restriction\n      } return output;\n   }\n\n   parseRecipes(recipes, filters) {\n      let {hits} = recipes;\n      const {numMeals, restrictions} = filters;\n      hits = shuffleArray(hits);\n      if (restrictions.length > 1) {\n         hits = hits.filter(hit => {\n            const {recipe} = hit;\n            const {healthLabels} = recipe;\n            for (const restriction of restrictions) {\n               if (!healthLabels.includes(restriction)) {\n                  return false;\n               }\n            } return true;\n         });\n      }\n      this.showRecipes(hits, numMeals);\n   }\n\n   showRecipes(hits, numMeals) {\n      this.setState({\n         extraRecipes: hits.slice(numMeals),\n         hits: hits.slice(0, numMeals),\n         loading: false\n      });\n   }\n\n   deleteRecipe(index) {\n      this.setState(prevState => {\n         const {extraRecipes, hits} = prevState;\n         hits[index] = extraRecipes.pop();\n         return {extraRecipes, hits};\n      });\n   }\n}\n\n// ******************************  HELPER FUNCTIONS ****************************** //\n\n/**\n * getRange - Get the minimum and maximum allowed values given user input\n *\n * @param  {String} value String to be parsed as integer for median of range.\n * @param  {Number} rangeOffset Percentage of increase/decrease allowed in range\n * @return {String} In form min-max\n */\nfunction getRange(value, rangeOffset = DEFAULT_TOLERANCE_RANGE) {\n   value = parseInt(value);\n   const diff = Math.round(value * rangeOffset);\n   const min = value - diff;\n   const max = value + diff;\n   return `${min}-${max}`;\n}\n\n/**\n * shuffleArray - Randomly shuffles an array based on Fisher Yate's Algorithm\n * https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle#The_modern_algorithm\n *\n * @param  {Array} arr Array to be shuffled\n * @return {Array}     input arr in a random order\n */\nfunction shuffleArray(arr) {\n   for (let i = arr.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      const temp = arr[i];\n      arr[i] = arr[j];\n      arr[j] = temp;\n   }\n   return arr;\n}\n\n/**\n * Gets the response's result text if successful, otherwise\n * returns the rejected Promise result with an error status and corresponding text\n * @param {object} response - fetch response to check for success/error\n * @return {object} - valid result JSON if response was successful, otherwise rejected\n *                    Promise result\n */\nfunction checkStatus(response) {\n   if ((response.status >= 200 && response.status < 300) || response.status === 0) {\n      return response.json();\n   } else {\n      return Promise.reject(new Error(response.status + \": \" + response.statusText));\n   }\n}\n","/*\n    Hari Kaushik, Sai Ranganathan, Conner Ardman, Ian Wohlers\n    This is the App component which is later rendered onto the dom in index. This component\n    contains all of the client side routing and takes care of the users for the firebase.\n    It also helper functions to set up the basic layout of the page.\n*/\nimport React, { Component } from 'react';\nimport { SignUpForm } from './components/SignUpForm';\nimport BasicLayout from './components/BasicLayout';\nimport { RecipeGenerator } from './components/RecipeGenerator';\nimport moment from 'moment';\nimport 'whatwg-fetch';\nimport firebase from 'firebase/app';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport ReactLoading from 'react-loading';\n\nclass App extends Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         loading: true,\n         user: null,\n         currentDate: moment(),\n         schedule: {},\n         errorMessage: null,\n         content: \"main\"\n      };\n   }\n\n   //component mounting function used to set the state of the user for getting info from firebase.\n   componentDidMount() {\n\n      // this function determines how the app should set its state in repsonse to an update\n      let renderSchedule = (databaseSchedule) => {\n            if (this.state.user && databaseSchedule.child(this.state.user.uid).val()){\n                  this.setState({schedule:databaseSchedule.child(this.state.user.uid).val()});\n            } else {\n                  this.setState({schedule:{}}); // for users with no recipes saved\n            }\n      }\n\n      this.authUnRegFunc = firebase.auth().onAuthStateChanged(user => {\n            this.setState({loading: false, schedule:{}});\n            if (user) {\n                  this.setState({user});\n            }\n\n            // render the user's schedule on initial login\n            firebase.database().ref('schedules').once('value', renderSchedule);\n      });\n\n      // create a listener for changes to that user's schedule\n      firebase.database().ref('schedules')\n            .on('value', renderSchedule);\n   }\n\n   componentWillUnmount() {\n      this.authUnRegFunc();\n   }\n\n   // adds a meal from the schduler with all the appropriate data from the fetched api.\n   addMeal = (meals) => {\n\n      // this is a SUPER annoying bug fix, keys that have . in them break firebase, so we recursively remove them\n      let validateObjectForFirebase = (curr) => {\n            if((typeof curr === \"object\") && (curr !== null)){\n                  Object.keys(curr).forEach((key) => {\n                        if(key.includes('.')){\n                              delete curr[key]; // remove that key (this is maybe harmful?)\n                        } else {\n                              validateObjectForFirebase(curr[key]);\n                        }\n                  })\n            }\n      }\n\n      validateObjectForFirebase(meals); // lets validate our new (single day) meal plan for firebase\n\n      let currDate = this.state.currentDate.format(\"MMDDYY\")\n\n      // then post this new schedule to the firebase\n      let ref = firebase.database().ref('schedules').child(this.state.user.uid);\n\n      let updates = {};\n      updates[currDate] = meals; // we need to do this so we can update different dates\n\n      ref.update(updates)\n      .catch(function(error) {\n         console.log('Synchronization failed');\n      });\n   }\n\n   // this function deletes ALL recipes a user has saved\n   clearSchedule = () => {\n      let ref = firebase.database().ref('schedules').child(this.state.user.uid);\n      ref.remove();\n   }\n\n   // sets the current date\n   setCurrentDate = (date) => {\n      this.setState({ currentDate: date });\n   }\n\n   // takes care of the sign up page for the using the email and password for the\n   handleSignUp = (email, password) => {\n      this.setState({errorMessage: null});\n      if (!email && !password) {\n         this.error({message: \"Please provide an email and password\"});\n      } else if (!email) {\n         this.error({message: \"Please provide an email.\"});\n      } else if (!password) {\n         this.error({message: \"Please provide a password.\"});\n      } else {\n         firebase.auth().createUserWithEmailAndPassword(email, password).catch(this.error.bind(this));\n      }\n   }\n\n   // takes care of the sign in and posts to the firebase\n   handleSignIn = (email, password) => {\n      this.setState({errorMessage: null});\n      firebase.auth().signInWithEmailAndPassword(email, password).then(user => {\n         this.setState({user, errorMessage: null});\n      }).catch(this.error.bind(this));\n   }\n\n   handleSignOut = () => {\n      firebase.auth().signOut().then(() => {\n         this.setState({\n            user: null,\n            errorMessage: null});\n      }).catch(console.log);\n   }\n\n   error(msg) {\n      this.setState({errorMessage: msg.message});\n   }\n\n   // render the home page\n   renderHome = routerProps => {\n      return(\n         <BasicLayout\n            {...routerProps}\n            currentDate={this.state.currentDate}\n            setDate={this.setCurrentDate}\n            schedule={this.state.schedule}\n            clearSchedule={this.clearSchedule}\n            logOut={this.handleSignOut}\n            user={this.state.user}\n            content=\"main\"\n         />\n      );\n   }\n\n   // or render the about page\n   renderAbout = routerProps => {\n      return(\n         <BasicLayout\n            {...routerProps}\n            currentDate={this.state.currentDate}\n            setDate={this.setCurrentDate}\n            clearSchedule={this.clearSchedule}\n            logOut={this.handleSignOut}\n            user={this.state.user}\n            content=\"about\"\n         />\n      );\n   }\n\n   // or render the recipe generator page\n   renderGenerator = routerProps => {\n      return(\n         <RecipeGenerator\n            {...routerProps}\n            currentDate={this.state.currentDate}\n            setDate={this.setCurrentDate}\n            schedule={this.state.schedule}\n            saveRecipe={this.addMeal}\n         />\n      );\n   }\n\n   render() {\n      const {loading, user, errorMessage} = this.state;\n      const error = errorMessage != null ? <p className=\"alert alert-danger\">{errorMessage}</p> : null;\n\n      if (loading) {\n        return (\n           <div className=\"loading-screen\">\n                 <ReactLoading id=\"loading\" type={\"spin\"} color={\"Black\"} height={150} width={150}/>\n                 <div className=\"push\"></div><div className=\"push\"></div>\n          </div>\n        );\n      } else if (user) {\n         return(\n            <Switch>\n                  <Route path='/' exact render={this.renderHome} />\n                  <Route path='/generate' render={this.renderGenerator} />\n                  <Route path='/about' component={this.renderAbout} />\n                  <Redirect to='/' />\n            </Switch>\n         );\n      } else {\n         return (\n            <div>\n            <h1 className=\"signUpHeader\">Welcome to Main Course</h1>\n            <div className=\"container\">\n                     {error}\n                  <h2>Sign Up / Sign In</h2>\n\n                  <SignUpForm signUpCallback={this.handleSignUp} signInCallback={this.handleSignIn}/>\n            </div></div>);\n      }\n   }\n}\n\nexport default App;\n","/*\n    Hari Kaushik, Sai Ranganathan, Conner Ardman, Ian Wohlers\n    This is the index which is instantiates the App object and adds it into the dom under the element 'root.\n    It also includes all the credential information to access the firebase used in the app.\n*/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport { BrowserRouter } from 'react-router-dom';\n\nvar config = {\n  apiKey: \"AIzaSyBqeA3VRwMC0S9hUSknkvm9bwHHVvzRSek\",\n  authDomain: \"meal-time-deea8.firebaseapp.com\",\n  databaseURL: \"https://meal-time-deea8.firebaseio.com\",\n  projectId: \"meal-time-deea8\",\n  storageBucket: \"meal-time-deea8.appspot.com\",\n  messagingSenderId: \"374370065536\"\n};\nfirebase.initializeApp(config);\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n"],"sourceRoot":""}